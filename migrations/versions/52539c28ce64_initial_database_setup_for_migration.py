"""Initial database setup for migration

Revision ID: 52539c28ce64
Revises: 
Create Date: 2025-05-21 09:25:39.061401

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '52539c28ce64'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('instruments', schema=None) as batch_op:
        batch_op.alter_column('symbol',
               existing_type=sa.TEXT(),
               type_=sa.String(length=10),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('category',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=True)

    with op.batch_alter_table('portfolio', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=False)

    with op.batch_alter_table('prices', schema=None) as batch_op:
        batch_op.alter_column('symbol',
               existing_type=sa.TEXT(),
               type_=sa.String(length=10),
               existing_nullable=False)
        batch_op.alter_column('price_type',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.drop_constraint('prices_symbol_date_type_uc', type_='unique')
        batch_op.create_unique_constraint('_symbol_date_price_type_uc', ['symbol', 'date', 'price_type'])

    with op.batch_alter_table('trades', schema=None) as batch_op:
        batch_op.alter_column('symbol',
               existing_type=sa.TEXT(),
               type_=sa.String(length=10),
               existing_nullable=False)
        batch_op.alter_column('trade_type',
               existing_type=sa.TEXT(),
               type_=sa.String(length=10),
               existing_nullable=False)
        batch_op.alter_column('currency',
               existing_type=sa.TEXT(),
               type_=sa.String(length=10),
               existing_nullable=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('username',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.TEXT(),
               type_=sa.String(length=200),
               existing_nullable=False)
        batch_op.alter_column('role',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('role',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.String(length=200),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=False)

    with op.batch_alter_table('trades', schema=None) as batch_op:
        batch_op.alter_column('currency',
               existing_type=sa.String(length=10),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('trade_type',
               existing_type=sa.String(length=10),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('symbol',
               existing_type=sa.String(length=10),
               type_=sa.TEXT(),
               existing_nullable=False)

    with op.batch_alter_table('prices', schema=None) as batch_op:
        batch_op.drop_constraint('_symbol_date_price_type_uc', type_='unique')
        batch_op.create_unique_constraint('prices_symbol_date_type_uc', ['symbol', 'date', 'price_type'])
        batch_op.alter_column('price_type',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('symbol',
               existing_type=sa.String(length=10),
               type_=sa.TEXT(),
               existing_nullable=False)

    with op.batch_alter_table('portfolio', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('instruments', schema=None) as batch_op:
        batch_op.alter_column('category',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('symbol',
               existing_type=sa.String(length=10),
               type_=sa.TEXT(),
               existing_nullable=False)

    # ### end Alembic commands ###
